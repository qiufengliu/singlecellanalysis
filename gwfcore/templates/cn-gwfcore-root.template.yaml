---
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  (WWPS-GLS-WF-GWFCORE) Genomics workflow core execution environment


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Required
        Parameters:
          - S3BucketName
          - ExistingBucket
          - VpcId
          - SubnetIds
          - ElasticFileSystemID
          - KeyPairName
      - Label:
          default: Optional
        Parameters:
          - Namespace
          - DefaultCEMinvCpus
          - DefaultCEMaxvCpus
          - PriorityCEMinvCpus
          - PriorityCEMaxvCpus
      - Label:
          default: Distribution Configuration
        Parameters:
          - TemplateRootUrl
          - ArtifactRootUrl

    ParameterLabels:
      S3BucketName:
        default: S3 Bucket Name
      ExistingBucket:
        default: Existing Bucket?
      VpcId:
        default: VPC ID
      SubnetIds:
        default: VPC Subnet IDs
      DefaultCEMinvCpus:
        default: Default Min vCPU
      DefaultCEMaxvCpus:
        default: Default Max vCPU
      PriorityCEMinvCpus:
        default: High Priority Min vCPU
      PriorityCEMaxvCpus:
        default: High Priority Max vCPU
      TemplateRootUrl:
        default: Template Root URL
      ArtifactRootUrl:
        default: Artifact Root URL
      ElasticFileSystemID:
        default: Elastic File System ID
      KeyPairName:
        default: Key Pair Name


Parameters:
  Namespace:
    Type: String
    Description: Optional namespace (e.g. project name) to use to label resources. If not specified the stack-name will be used.
    Default: ""
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: 'The VPC to create security groups and deploy AWS Batch to. NOTE: Must be the same VPC as the provided subnet IDs.'
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'Subnets you want your batch compute environment to launch in. We recommend private subnets. NOTE: Must be from the VPC provided.'
  S3BucketName:
    Description: >-
      A S3 bucket name for storing analysis results.
      The bucket name must respect the S3 bucket naming conventions
      (can contain lowercase letters, numbers, periods and hyphens).
    Type: String
    AllowedPattern: "((?=^.{3,63}$)(?!^(\\d+\\.)+\\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$)|(^.{0}$))"
    ConstraintDescription: "Must respect AWS naming conventions"
    Default: singlecellanalysis
  ExistingBucket:
    Description: Does this bucket already exist?
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"
  DefaultCEMinvCpus:
    Description: The minimum number of CPUs for the default Batch Compute Environment
    Type: Number
    Default: 0
  DefaultCEMaxvCpus:
    Description: The maximum number of CPUs for the default Batch Compute Environment
    Type: Number
    Default: 100
  PriorityCEMinvCpus:
    Description: The minimum number of CPUs for the high-priority Batch Compute Environment
    Type: Number
    Default: 0
  PriorityCEMaxvCpus:
    Description: The maximum number of CPUs for the high-priority Batch Compute Environment
    Type: Number
    Default: 100
  TemplateRootUrl:
    Type: String
    Description: >-
      Root URL for where nested templates are stored
    Default: https://singlecellanalysis.s3.cn-northwest-1.amazonaws.com.cn  # dist: pin_version
    ConstraintDescription: >-
      Must be a valid S3 HTTP URL
  ArtifactRootUrl:
    Type: String
    ConstraintDescription: >-
      Must be a valid S3 URL
    Default: s3://singlecellanalysis/gwfcore
  ElasticFileSystemID:
    Description: >-
      Reference Elastic File System ID
    Type: String
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

Conditions:
  NoNamespace: !Equals [ !Ref Namespace, "" ]

Resources:
  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/gwfcore/templates/cn-gwfcore-s3.template.yaml
      TimeoutInMinutes: 5
      Parameters:
        Namespace:
          Fn::If:
            - NoNamespace
            - !Sub ${AWS::StackName}
            - !Ref Namespace
        S3BucketName: !Ref S3BucketName
        ExistingBucket: !Ref ExistingBucket

  IamStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3Stack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/gwfcore/templates/cn-gwfcore-iam.template.yaml
      TimeoutInMinutes: 10
      Parameters:
        Namespace:
          Fn::If:
            - NoNamespace
            - !Sub ${AWS::StackName}
            - !Ref Namespace
        S3BucketName: !Sub ${S3Stack.Outputs.BucketName}

  LaunchTplStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/gwfcore/templates/cn-gwfcore-launch-template.template.yaml
      Parameters:
        Namespace:
          Fn::If:
            - NoNamespace
            - !Sub ${AWS::StackName}
            - !Ref Namespace
        ElasticFileSystemID: !Ref ElasticFileSystemID
        ArtifactRootUrl: !Ref ArtifactRootUrl

  BatchStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - IamStack
      - LaunchTplStack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/gwfcore/templates/cn-gwfcore-batch.template.yaml
      TimeoutInMinutes: 10
      Parameters:
        Namespace:
          Fn::If:
            - NoNamespace
            - !Sub ${AWS::StackName}
            - !Ref Namespace
        LaunchTemplateId: !Sub ${LaunchTplStack.Outputs.LaunchTemplateId}
        VpcId: !Ref VpcId
        SubnetIds: !Join [ ",", !Ref SubnetIds ]
        DefaultCEMinvCpus: !Ref DefaultCEMinvCpus
        DefaultCEMaxvCpus: !Ref DefaultCEMaxvCpus
        PriorityCEMinvCpus: !Ref PriorityCEMinvCpus
        PriorityCEMaxvCpus: !Ref PriorityCEMaxvCpus
        BatchServiceRoleArn: !Sub ${IamStack.Outputs.BatchServiceRoleArn}
        Ec2InstanceProfileArn: !Sub ${IamStack.Outputs.BatchInstanceProfileArn}
        SpotFleetRoleArn: !Sub ${IamStack.Outputs.BatchSpotFleetRoleArn}
        KeyPairName: !Ref KeyPairName

  ParamS3Bucket:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name:
        Fn::Sub:
          - /gwfcore/${namespace}/s3-bucket
          - namespace:
              Fn::If:
                - NoNamespace
                - !Sub ${AWS::StackName}
                - !Ref Namespace
      Type: String #required
      Value: !Sub ${S3Stack.Outputs.BucketName} #required
      Description: GWFCore S3 Bucket

  ParamDefaultJobQueue:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name:
        Fn::Sub:
          - /gwfcore/${namespace}/job-queue/default
          - namespace:
              Fn::If:
                - NoNamespace
                - !Sub ${AWS::StackName}
                - !Ref Namespace

      Type: String #required
      Value: !Sub ${BatchStack.Outputs.DefaultJobQueueArn} #required
      Description: GWFCore Default AWS Batch Job Queue

  ParamPriorityJobQueue:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name:
        Fn::Sub:
          - /gwfcore/${namespace}/job-queue/priority
          - namespace:
              Fn::If:
                - NoNamespace
                - !Sub ${AWS::StackName}
                - !Ref Namespace
      Type: String #required
      Value: !Sub ${BatchStack.Outputs.PriorityJobQueueArn} #required
      Description: GWFCore Priority AWS Batch Job Queue

Outputs:
  S3BucketName:
    Value: !Sub ${S3Stack.Outputs.BucketName}
  BatchJobRoleArn:
    Value: !Sub ${IamStack.Outputs.BatchJobRoleArn}
  DefaultJobQueueArn:
    Value: !Sub ${BatchStack.Outputs.DefaultJobQueueArn}
  PriorityJobQueueArn:
    Value: !Sub ${BatchStack.Outputs.PriorityJobQueueArn}
  ParamS3Bucket:
    Value: !Ref ParamS3Bucket
  ParamDefaultJobQueue:
    Value: !Ref ParamDefaultJobQueue
  ParamPriorityJobQueue:
    Value: !Ref ParamPriorityJobQueue
